var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:\xa0 https://zhiyaooo28.github.io/cd2024/ \n 網誌:\xa0 https://zhiyaooo28.github.io/cd2024/blog \n 簡報:\xa0 https://zhiyaooo28.github.io/cd2024/reveal \n 倉儲:  https://github.com/zhiyaooo28/cd2024 \xa0 \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'w3', 'text': '', 'tags': '', 'url': 'w3.html'}, {'title': '中英合併翻譯', 'text': 'w3_中英並列翻譯.pdf \n \n', 'tags': '', 'url': '中英合併翻譯.html'}, {'title': 'LaTex', 'text': '檔案: Latex \n \n \n \n', 'tags': '', 'url': 'LaTex.html'}, {'title': 'w4', 'text': '影片上字幕 \n 影片、字幕檔連結: w4影片上字幕 \n \n', 'tags': '', 'url': 'w4.html'}, {'title': '期中報告', 'text': '檔案(pdf、latex): 期中報告 \n ppt報告、影片: 期中報告ppt、影片 \n \n', 'tags': '', 'url': '期中報告.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': '任務一', 'text': '列出學員資料 \n', 'tags': '', 'url': '任務一.html'}, {'title': '任務二', 'text': '檔案位置: 圓桿 \n 論文一： \n 這篇文章探討了自動控制理論的限制，並將這些理論模型與實際構建的球體平衡平台進行比較。他們分析了理論和實際結果之間的差異，並探討了控制理論和系統實施中的挑戰。 \n 論文二： \n 這篇論文提出了一種利用PID控制器和FPGA平行計算來提高球體位置調節精度的解決方案。這個方法可以應用於控制具有多個參數的高速物體，非常實用。 \n 論文三： \n 這篇文章設計並比較了三種不同的控制結構，用於自動穩定球體在平台上的位置和軌跡追踪。他們發現狀態空間觀測器的性能最佳，並建立了一個教育平台，幫助非技術人員理解基本控制系統的原理。 \n 論文四： \n 這篇論文開發了一個使用微控制器和控制算法的球體平衡系統，主要用於控制理論的教學和應用。這個系統允許學生將理論知識應用於實踐，並了解封閉迴路回饋系統和PID算法的原理。 \n 論文五： \n 這篇文章設計了一個二自由度的球體平衡實驗平台，並使用AVR微控制器開發了一個雙環下屬控制系統。這個系統既有成本效益又易於控制，並計劃通過改進球體位置回饋信號的濾波來提高系統的速度和品質。 \n 論文六： \n 這篇論文使用QUARC軟體設計和實現了球體在二維平台上的位置控制。他們的實驗涵蓋了建模、控制器設計、模擬和實施等多個控制系統的關鍵步驟，為學生提供了寶貴的學習經驗。 \n', 'tags': '', 'url': '任務二.html'}, {'title': '任務三', 'text': '\n 負責零件-圓桿 檔案: w12 任務一檔案(.py .prt) \n \n', 'tags': '', 'url': '任務三.html'}, {'title': 'w17', 'text': '', 'tags': '', 'url': 'w17.html'}, {'title': '項目一', 'text': '檔案: 相關零件檔 \n yt影片連結:\xa0 https://youtu.be/KzA14FqFQaE \xa0 \n \n', 'tags': '', 'url': '項目一.html'}, {'title': '項目二', 'text': '檔案: 組合件檔案 \n yt影片連結:\xa0 https://youtu.be/8PDh59io52s \xa0 \n \n', 'tags': '', 'url': '項目二.html'}, {'title': '項目三', 'text': '檔案: CoppeliaSim運動場模擬檔案 \n yt影片連結:\xa0 https://youtu.be/EOi2XLsoEPI \xa0 \n \n \n \n \n \n \n', 'tags': '', 'url': '項目三.html'}]};