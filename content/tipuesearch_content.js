var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:\xa0 https://zhiyaooo28.github.io/cd2024/ \n 網誌:\xa0 https://zhiyaooo28.github.io/cd2024/blog \n 簡報:\xa0 https://zhiyaooo28.github.io/cd2024/reveal \n 倉儲:  https://github.com/zhiyaooo28/cd2024 \xa0 \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'w3', 'text': '', 'tags': '', 'url': 'w3.html'}, {'title': '中英合併翻譯', 'text': 'w3_中英並列翻譯.pdf \n \n', 'tags': '', 'url': '中英合併翻譯.html'}, {'title': 'LaTex', 'text': '檔案: Latex \n \n \n \n', 'tags': '', 'url': 'LaTex.html'}, {'title': 'w4', 'text': '影片上字幕 \n 影片、字幕檔連結: w4影片上字幕 \n \n', 'tags': '', 'url': 'w4.html'}, {'title': '期中報告', 'text': '檔案(pdf、latex): 期中報告 \n ppt報告、影片: 期中報告ppt、影片 \n \n', 'tags': '', 'url': '期中報告.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': '任務一', 'text': '列出學員資料 \n', 'tags': '', 'url': '任務一.html'}, {'title': '任務二', 'text': '檔案位置: 圓桿 \n', 'tags': '', 'url': '任務二.html'}, {'title': '論文一', 'text': '這篇文章探討了自動控制理論的限制，並將這些理論模型與實際構建的球體平衡平台進行了詳細比較。研究團隊首先建立了一套理論模型，描述了球體平衡平台的動力學和控制方法。隨後，他們設計並建造了一個物理實驗平台，用於驗證理論模型的準確性。在實驗過程中，研究人員觀察並記錄了平台在不同控制輸入下的反應，並將這些數據與理論預測進行對比分析。他們發現，儘管理論模型能夠在某些程度上描述系統的行為，但在實際應用中存在許多未預見的挑戰和偏差。例如，摩擦力、電機的非線性特性以及傳感器的噪聲等因素都對系統性能產生了顯著影響。這些發現揭示了控制理論在實際系統實施中的局限性，並強調了在設計和實現控制系統時需要考慮的實際因素。 \n', 'tags': '', 'url': '論文一.html'}, {'title': '論文二', 'text': '這篇論文提出了一種利用PID控制器和FPGA平行計算來提高球體位置調節精度的創新解決方案。首先，研究者詳細介紹了PID控制器的基本原理及其在位置調節中的應用。接著，他們探討了FPGA平行計算技術的優勢，特別是在處理高速且複雜控制任務時的性能表現。為了驗證該方法的有效性，研究團隊設計並實施了一個實驗平台，其中包括一個高精度位置傳感器和FPGA控制器。他們對比了傳統PID控制方法與結合FPGA技術的改進方法，發現後者在精度和響應速度方面有顯著提升。此外，該解決方案還能適應多參數和高速運動物體的控制需求，顯示出廣泛的應用潛力。這項研究為未來高性能控制系統的設計提供了重要參考。 \n', 'tags': '', 'url': '論文二.html'}, {'title': '論文三', 'text': '這篇文章設計並比較了三種不同的控制結構，用於自動穩定球體在平台上的位置和軌跡追踪。研究者首先介紹了每種控制結構的設計原理和實現方法，包括傳統PID控制器、模糊控制器和狀態空間觀測器。隨後，他們通過實驗對這三種控制方法的性能進行了詳細比較，評估了它們在穩定性、響應時間和精度等方面的表現。結果顯示，狀態空間觀測器的性能最佳，不僅在穩定性方面具有優勢，而且能夠更精確地追踪球體的運動軌跡。為了進一步推廣這些研究成果，研究團隊還開發了一個教育平台，使非技術人員也能夠理解和學習基本控制系統的原理。這個平台包括詳細的教程和實驗模組，幫助學習者從理論到實踐全面掌握控制技術。 \n', 'tags': '', 'url': '論文三.html'}, {'title': '論文四', 'text': '這篇論文開發了一個使用微控制器和控制算法的球體平衡系統，主要用於控制理論的教學和應用。研究團隊選擇了一款性能可靠的微控制器，並設計了一套完整的控制算法，旨在實現對球體位置的精確控制。實驗系統包括一個能夠測量球體位置的高精度傳感器和一個執行控制算法的微控制器。通過實驗，學生可以直觀地觀察到不同控制策略對系統行為的影響，進而深入理解封閉迴路回饋系統和PID算法的工作原理。此外，這個教學平台還包括一系列實驗指南和操作手冊，幫助學生從實踐中學習並應用所學知識。 \n', 'tags': '', 'url': '論文四.html'}, {'title': '論文五', 'text': '這篇文章設計了一個具有二自由度的球體平衡實驗平台，並使用AVR微控制器開發了一個雙環下屬控制系統。研究者首先介紹了二自由度球體平衡平台的機械結構設計和基本工作原理，接著詳細描述了雙環下屬控制系統的設計思路和實現過程。實驗結果顯示，該系統不僅具有成本效益，而且操作簡便，適合用於教育和研究領域。為了進一步提高系統性能，研究團隊計劃改進球體位置回饋信號的濾波技術，以提升系統的響應速度和控制品質。這項研究為低成本、高性能的球體平衡系統的開發提供了有價值的參考。 \n', 'tags': '', 'url': '論文五.html'}, {'title': '論文六', 'text': '這篇論文使用QUARC軟體設計和實現了球體在二維平台上的位置控制。研究者詳細介紹了QUARC軟體的功能和特點，並描述了他們如何利用該軟體進行系統建模、控制器設計、模擬和實施。實驗過程涵蓋了從理論模型的建立到控制器的調試和優化，再到最終系統的實驗驗證等多個關鍵步驟。這些實驗為學生提供了一個完整的學習過程，使他們能夠全面掌握控制系統設計和實施的各個環節。通過這個實驗平台，學生可以直觀地了解控制系統的動態行為和設計過程，從而提高他們的實踐能力和理論知識。 \n', 'tags': '', 'url': '論文六.html'}, {'title': '任務三', 'text': '\n 負責零件-圓桿 檔案: w12 任務一檔案(.py .prt) \n \n', 'tags': '', 'url': '任務三.html'}, {'title': 'w17', 'text': '', 'tags': '', 'url': 'w17.html'}, {'title': '項目一', 'text': '檔案: 相關零件檔 \n yt影片連結:\xa0 https://youtu.be/KzA14FqFQaE \xa0 \n \n', 'tags': '', 'url': '項目一.html'}, {'title': '項目二', 'text': '檔案: 組合件檔案 \n yt影片連結:\xa0 https://youtu.be/8PDh59io52s \xa0 \n \n', 'tags': '', 'url': '項目二.html'}, {'title': '項目三', 'text': '檔案: CoppeliaSim運動場模擬檔案 \n yt影片連結:\xa0 https://youtu.be/EOi2XLsoEPI \xa0 \n \n', 'tags': '', 'url': '項目三.html'}, {'title': '期末報告', 'text': '報告檔案(latex、pdf、ppt、mp4): 41123128-期末報告 \n \n yt影片: 四設計二甲 第四組 報告影片 - YouTube \n \n \n \n \n \n \n', 'tags': '', 'url': '期末報告.html'}]};